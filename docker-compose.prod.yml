# This is deprecated and should probably be moved into archive or deleted
version: '3.8'

services:
  db:
    env_file:
      - ./.env.docker
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    healthcheck:
      #CHANGE 1: this command checks if the database is ready, right on the source db server
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    env_file:
      - ./.env.docker
    build: ./application/backend
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  ui:
    env_file:
      - ./.env.docker
    build:
      context: ./application/frontend
      args:
        API_PATH: 'http://web:5000'
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_URL=http://0.0.0.0:3000
    depends_on:
      - web
    networks:
      - app-network
 
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - ui
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    # command: certonly --email tinynakji@gmail.com --agree-tos --no-eff-email --staging -d tinynakji.com  -d www.tinynakji.com 
    # command: certonly --webroot --webroot-path=/var/www/html --email tinynakji@gmail.com --agree-tos --no-eff-email --staging -d tinynakji.com  -d www.tinynakji.com 
    command: certonly --webroot --webroot-path=/var/www/html --email tinynakji@gmail.com --agree-tos --no-eff-email --force-renewal -d tinynakji.com  -d www.tinynakji.com 


volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
  web-root:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/sammy/node_project/views/
  #     o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/tinynakji/workspace/nakji_template_v0/dhparam/
      o: bind

networks:
  app-network:
    driver: bridge
